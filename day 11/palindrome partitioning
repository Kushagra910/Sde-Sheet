bool ispallindrome(string s,int start,int end){
    while(start<=end){
        if(s[start]!=s[end]){
            return false;
        }
        start++;
        end--;
    }
    return true;
}
void solve(int ind,string s,vector<vector<string>>&res,vector<string>&part){
    if(ind==s.size()){
        res.push_back(part);
        return;
    }
    for(int i=ind;i<s.size();i++){
        if(ispallindrome(s,ind,i)){
            part.push_back(s.substr(ind,i-ind+1));
            solve(i+1,s,res,part);
            part.pop_back();
        }
    }
}
       
vector<vector<string>> partition(string &s) 
{
    // Write your code here.
    
    vector<vector<string>>res;
    vector<string>part;
    solve(0,s,res,part);
    
    return res;
}
